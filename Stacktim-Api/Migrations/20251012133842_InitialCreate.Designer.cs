// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stacktim.Data;

#nullable disable

namespace Stacktim.Migrations
{
    [DbContext(typeof(StacktimContext))]
    [Migration("20251012133842_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stacktim.Models.Player", b =>
                {
                    b.Property<int>("IdPlayers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Players");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlayers"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RankPlayer")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.HasKey("IdPlayers")
                        .HasName("PK__Players__8FEDD67C98B627B5");

                    b.HasIndex(new[] { "Name" }, "UQ__Players__737584F660C1C0F6")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Players__A9D1053493E6CFD3")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Stacktim.Models.Team", b =>
                {
                    b.Property<int>("IdTeams")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Teams");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeams"));

                    b.Property<int>("CaptainId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.HasKey("IdTeams")
                        .HasName("PK__Teams__BA144B3552FAF2D4");

                    b.HasIndex("CaptainId");

                    b.HasIndex(new[] { "Name" }, "UQ__Teams__737584F62FD82B32")
                        .IsUnique();

                    b.HasIndex(new[] { "Tag" }, "UQ__Teams__C4516413FE09DDBE")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Stacktim.Models.TeamPlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "TeamId")
                        .HasName("PK__TeamPlay__CB6DDAB19D2234FF");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamPlayers");
                });

            modelBuilder.Entity("Stacktim.Models.Team", b =>
                {
                    b.HasOne("Stacktim.Models.Player", "Captain")
                        .WithMany("Teams")
                        .HasForeignKey("CaptainId")
                        .IsRequired()
                        .HasConstraintName("FK_Teams_Captain");

                    b.Navigation("Captain");
                });

            modelBuilder.Entity("Stacktim.Models.TeamPlayer", b =>
                {
                    b.HasOne("Stacktim.Models.Player", "Player")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeamPlaye__Playe__32AB8735");

                    b.HasOne("Stacktim.Models.Team", "Team")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeamPlaye__TeamI__339FAB6E");

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Stacktim.Models.Player", b =>
                {
                    b.Navigation("TeamPlayers");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Stacktim.Models.Team", b =>
                {
                    b.Navigation("TeamPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
